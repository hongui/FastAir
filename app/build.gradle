import java.security.KeyStore

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion sdk.compile
    buildToolsVersion buildTool
    defaultConfig {
        applicationId "com.mob.lee.fastair"
        minSdkVersion sdk.mins
        targetSdkVersion sdk.target
        versionCode appVersion.code
        versionName appVersion.name
    }

    /*signingConfigs{
        release{
            Properties properties = new Properties()
            InputStream stream = project.rootProject.file('local.properties').newDataInputStream()
            properties.load(stream)

            storeFile file(properties.getProperty('keystore.path'))
            storePassword properties.getProperty('keystore.password')
            keyAlias properties.getProperty('alias.name')
            keyPassword properties.getProperty('alias.password')
        }
    }*/
    buildTypes {
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            // VersionName后缀
            versionNameSuffix "-debug"
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
        }
        release {
            // 不显示log
            buildConfigField "boolean", "LOG_DEBUG", "false"
            // 混淆
            minifyEnabled true
            // Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource
            shrinkResources true
            // 混淆配置
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            //signingConfig signingConfigs.release
        }
    }
}

dependencies {
    testCompile 'junit:junit:4.12'
    compile fileTree(include: ['*.jar'], dir: 'libs')
    implementation support.compat
    implementation support.recyclerview
    implementation support.design
    implementation support.cardview
    implementation support.constaint

    implementation coreKotlin.kdk
    implementation coreKotlin.reflect
    implementation coreKotlin.coroutines

    implementation lifecycle
    implementation okio
    implementation room.runtime

    kapt room.compiler
}
